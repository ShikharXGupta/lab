import numpy as np
import tensorflow as tf

np.random.seed(42)
X_train = np.random.rand(100, 2)
y_train = (X_train[:, 0] + X_train[:, 1] > 1).astype(float)  #applying binary classification

# architecture of the nn
model = tf.keras.Sequential([
    tf.keras.layers.Dense(units=32, activation='relu', input_shape=(2,)),
    tf.keras.layers.Dense(units=16, activation='relu'),
    tf.keras.layers.Dense(units=1, activation='sigmoid')
])


model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])

# model training
model.fit(X_train, y_train, epochs=500, batch_size=16)


X_new = np.array([[0.6, 0.8], [0.2, 0.1]]) #new input
predictions = model.predict(X_new)
print("Predictions:")
print(predictions) #printing the predicted values as per the trained model 